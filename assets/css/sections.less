//Also BlueprintCSS overlays
//layout
@spacing: 8; //value in PX
@gridWidth: 1280px;

.marginTop (@value: 1) {
  @sizeResult: @spacing * @value;
  @remValue: @sizeResult / 16;
  margin-top: ~"@{remValue}rem";
}

.marginBottom (@value: 1) {
  @sizeResult: @spacing * @value;
  @remValue: @sizeResult / 16;
  margin-bottom: ~"@{remValue}rem";
}

.add-padding (@valueV: 1, @valueH: 1) {
  @resultV: @spacing * @valueV;
  @resultH: @spacing * @valueH;
  @remValueV: @resultV / 16;
  @remValueH: @resultH / 16;
  padding: ~"@{remValueV}rem" ~"@{remValueH}rem";
}

.add-margin (@valueV: 1, @valueH: 1) {
  @resultV: @spacing * @valueV;
  @resultH: @spacing * @valueH;
  @remValueV: @resultV / 16;
  @remValueH: @resultH / 16;
  margin: ~"@{remValueV}rem" ~"@{remValueH}rem";
}

.container, [bp~=container] {
  max-width: @gridWidth;
  margin: 0 auto; // isso ja resolve altos problemas, se remover ja coloque outra solucao

  @media only screen and (max-width: @gridWidth - 1) {
    max-width: calc(100% - 40px);
  }
}

.make-padding (@paddingXl: 6, @paddingLg: 5, @paddingMd: 4, @paddingSm: 3) {


  @media @desktopBig {
    .add-padding(@paddingXl,0);
  }

  @media @desktopSmall {
    .add-padding(@paddingLg,0);
  }

  @media @tablet {
    .add-padding(@paddingMd,0);
  }

  @media @mobile {
    .add-padding(@paddingSm,0);
  }
}

.section-base {
  .make-padding();
  &:not(last-child) {
      margin: 0 auto 2rem;

    @media @responsiveDevices {
      margin: 0 auto 1rem;
    }
  }
}

.section-inner {
  .make-padding(4,3,2,1);
}

.section-text {
  .container();
  p {
    max-width: 50em;
  }
}

.spaced-image {
    padding: 1rem;
}

.is-fullheight {
  min-height: 100vh;
  min-height: calc(var(--vh, 1vh) * 100);
}

.text-over-image {
  padding: 0 2vw;
  position: absolute;
  right: 0;
  bottom: 0%;
  color: #eee;
  text-shadow: 0px 0px 10px @darkGrey;
  font-family: @mainFont;
}

.fade-top-bottom {
mask-image: linear-gradient(
  rgba(0,0,0,0) 0%,
  rgba(0,0,0,1) 15%,
  rgba(0,0,0,1) 85%,
  rgba(0,0,0,0) 100%,
);
}

.fade-top {
mask-image: linear-gradient(
  rgba(0,0,0,0) 0%,
  rgba(0,0,0,1) 15%,
);
}

.fade-bottom {
mask-image: linear-gradient(
  rgba(0,0,0,1) 85%,
  rgba(0,0,0,0) 100%,
);
}

figure.fullscreen {
  .is-fullheight()
}

.attribution {
  position: absolute;
  bottom: 0;
  right: 0;
  color: #000;
  background-color: rgba(255, 255, 255, 0.2);
  font-size: 70%;
  a {
    color: #000;
  }
}

.model-container {
  display: flex;
}
