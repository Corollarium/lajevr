(window.webpackJsonp=window.webpackJsonp||[]).push([[12,15],{192:function(e,t,n){"use strict";n.r(t);var r={data:function(){return{headerOverlay:!1,head:{title:"",description:""}}},watch:{headerOverlay:function(e,t){this.$root.$emit("headerOverlay",e)}},mounted:function(){this.$root.$emit("headerOverlay",this.headerOverlay)},head:function(){return{title:this.head.title,meta:[{hid:"description",name:"description",content:this.head.description}]}}},o=n(4),component=Object(o.a)(r,(function(){var e=this.$createElement;return(this._self._c||e)("div")}),[],!1,null,null,null);t.default=component.exports},232:function(e,t,n){"use strict";n.d(t,"a",(function(){return v}));n(199);var r=n(88),o=n(90),c=n(202),l=n(200),d=n(197),h=n(203);function f(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,r=Object(d.a)(e);if(t){var o=Object(d.a)(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return Object(l.a)(this,n)}}var v=function(e){Object(c.a)(n,e);var t=f(n);function n(e,o){var c,l=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return Object(r.a)(this,n),(c=t.call(this,e,"./oceanPostProcess",["time","fov","resolution","cameraPosition","cameraRotation"],["positionSampler","reflectionSampler","refractionSampler"],{width:l.width||o.getEngine().getRenderWidth(),height:l.height||o.getEngine().getRenderHeight()},l.isPipeline?null:o,h.Texture.TRILINEAR_SAMPLINGMODE,o.getEngine(),!0))._time=0,c._cameraRotation=h.Vector3.Zero(),c._cameraViewMatrix=h.Matrix.Identity(),c._reflectionEnabled=!1,c._refractionEnabled=!1,c._geometryRenderer=o.getScene().enableGeometryBufferRenderer(1),c._geometryRenderer&&c._geometryRenderer.isSupported?(c._geometryRenderer.enablePosition=!0,c.reflectionTexture=new h.MirrorTexture("oceanPostProcessReflection",l.reflectionSize||{width:512,height:512},o.getScene()),c.reflectionTexture.mirrorPlane=h.Plane.FromPositionAndNormal(h.Vector3.Zero(),new h.Vector3(0,-1,0)),c.refractionTexture=new h.RenderTargetTexture("oceanPostProcessRefraction",l.refractionSize||{width:512,height:512},o.getScene())):c.updateEffect("#define NOT_SUPPORTED\n"),c.onApply=function(e){if(c._geometryRenderer&&c._geometryRenderer.isSupported){var t=o.getEngine(),n=o.getScene();c._time+=.001*t.getDeltaTime(),e.setFloat("time",c._time);e.setVector2("resolution",new h.Vector2(t.getRenderWidth()/1,t.getRenderHeight()/1)),n&&(e.setVector3("cameraPosition",o.globalPosition),c._computeCameraRotation(o),e.setVector3("cameraRotation",c._cameraRotation),e.setFloat("fov",o.fov),e.setTexture("positionSampler",c._geometryRenderer.getGBuffer().textures[2]),c._reflectionEnabled&&e.setTexture("reflectionSampler",c.reflectionTexture),c._refractionEnabled&&e.setTexture("refractionSampler",c.refractionTexture))}},c}return Object(o.a)(n,[{key:"reflectionEnabled",get:function(){return this._reflectionEnabled},set:function(e){if(this._reflectionEnabled!==e){this._reflectionEnabled=e,this.updateEffect(this._getDefines());var t=this.getCamera().getScene().customRenderTargets;if(e)t.push(this.reflectionTexture);else{var n=t.indexOf(this.reflectionTexture);-1!==n&&t.splice(n,1)}}}},{key:"refractionEnabled",get:function(){return this._refractionEnabled},set:function(e){if(this._refractionEnabled!==e){this._refractionEnabled=e,this.updateEffect(this._getDefines());var t=this.getCamera().getScene().customRenderTargets;if(e)t.push(this.refractionTexture);else{var n=t.indexOf(this.refractionTexture);-1!==n&&t.splice(n,1)}}}},{key:"isSupported",get:function(){return null!==this._geometryRenderer&&this._geometryRenderer.isSupported}},{key:"_getDefines",value:function(){var e=[];return this._reflectionEnabled&&e.push("#define REFLECTION_ENABLED"),this._refractionEnabled&&e.push("#define REFRACTION_ENABLED"),e.join("\n")}},{key:"_computeCameraRotation",value:function(e){e.upVector.normalize();var t=e.getTarget();e._initialFocalDistance=t.subtract(e.position).length(),e.position.z===t.z&&(e.position.z+=h.Epsilon);var n=t.subtract(e.position);e._viewMatrix.invertToRef(this._cameraViewMatrix),this._cameraRotation.x=Math.atan(this._cameraViewMatrix.m[6]/this._cameraViewMatrix.m[10]),n.x>=0?this._cameraRotation.y=-Math.atan(n.z/n.x)+Math.PI/2:this._cameraRotation.y=-Math.atan(n.z/n.x)-Math.PI/2,this._cameraRotation.z=0,isNaN(this._cameraRotation.x)&&(this._cameraRotation.x=0),isNaN(this._cameraRotation.y)&&(this._cameraRotation.y=0),isNaN(this._cameraRotation.z)&&(this._cameraRotation.z=0)}}]),n}(h.PostProcess)},262:function(e,t,n){"use strict";n.r(t),t.default="precision highp float;\n\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\n\nuniform mat4 view;\nuniform mat4 projection;\nuniform mat4 worldViewProjection;\nuniform vec2 cameraMinMaxZ;\n\nvarying vec2 vUV;\nvarying vec3 vNormal;\nvarying vec3 vPosition;\n// varying float normalizedDepth;\n\n#include<bonesDeclaration>\n#include<instancesDeclaration>\n\n/*\n * Vertex shader for caustic and babylonjs.\n */\nvoid main() {\n    vec3 positionUpdated = position;\n\n    // include shaders to calculate instances and bones\n    #include<instancesVertex>\n    #include<bonesVertex>\n\n    // return normal, uv and position\n    vec4 worldPos = finalWorld * vec4(positionUpdated, 1.0);\n    vec4 viewPos = view * worldPos;\n\n    // float distancetoCamera = -viewPos.z;\n    // float distance = (cameraMinMaxZ.x + (cameraMinMaxZ.y - cameraMinMaxZ.x)*depth);\n    // float normalizedDistance = distance / cameraMinMaxZ.x;\n    // normalizedDepth = (distancetoCamera - cameraMinMaxZ.x)/(cameraMinMaxZ.y - cameraMinMaxZ.x);\n\n    vNormal = normalize(vec3(finalWorld * vec4(normal, 0.0)));\n    vPosition = worldPos.xyz;\n    vUV = uv;\n\n    gl_Position = projection * viewPos;\n}\n"},263:function(e,t,n){var content=n(350);content.__esModule&&(content=content.default),"string"==typeof content&&(content=[[e.i,content,""]]),content.locals&&(e.exports=content.locals);(0,n(33).default)("2cca6004",content,!0,{sourceMap:!1})},342:function(e,t,n){"use strict";n.r(t),t.default="precision highp float;\n\nattribute vec3 position;\nattribute vec2 uv;\n\nuniform mat4 worldViewProjection;\n\nvarying vec2 vUV;\n\nvoid main() {\n  vUV = uv;\n  gl_Position = worldViewProjection * vec4(position, 1.0);\n}\n"},343:function(e,t,n){"use strict";n.r(t),t.default="precision highp float;\n\nvarying vec2 vUV;\n\nuniform float time;\nuniform vec3 fogColor;\nuniform vec2 cameraMinMaxZ;\nuniform vec3 cameraPosition;\n\nuniform sampler2D textureSampler;\nuniform sampler2D causticTexture;\nuniform sampler2D depthTexture;\nuniform sampler2D oceanDepthTexture;\n\n#define csb(f, con, sat, bri) mix(vec3(.5), mix(vec3(dot(vec3(.2125, .7154, .0721), f*bri)), f*bri, sat), con)\n\n#define TAU 6.28318530718\n#define MAX_ITER 8\n#define BASE_INTEN .005\n#define FOG_DENSITY 2.8\n#define FOG_DISTANCE_CORRECTION 6.0 // move the far plane closer\n#define SEA_BASE_COLOR vec3(0.0, 0.176, 0.333)\n\nfloat fogFactorExp(\n  const float dist,\n  const float density\n) {\n  return 1.0 - clamp(exp2(-density * dist), 0.0, 1.0);\n}\n\nfloat causticX(float x, float power, float gtime)\n{\n  float p = mod(x*TAU, TAU)-250.0;\n  float tTime = gtime * .5+23.0;\n\n\tfloat i = p;\n\tfloat c = 1.0;\n\tfloat inten = BASE_INTEN;\n\n\tfor (int n = 0; n < MAX_ITER/2; n++)\n\t{\n\t\tfloat t = tTime * (1.0 - (3.5 / float(n+1)));\n\t\ti = p + cos(t - i) + sin(t + i);\n\t\tc += 1.0/length(p / (sin(i+t)/inten));\n\t}\n\tc /= float(MAX_ITER);\n\tc = 1.17-pow(c, power);\n\n    return c;\n}\n\nfloat godRaysCalc(vec2 uv)\n{\n    float light = 0.0;\n\n    light += pow(causticX((uv.x+0.08*uv.y)/1.7+0.5, 1.8, time*0.65),10.0)*0.05;\n    light -= pow((1.0-uv.y)*0.3,2.0)*0.2;\n    light += pow(causticX(sin(uv.x), 0.3,time*0.7),9.0)*0.4;\n    light += pow(causticX(cos(uv.x*2.3), 0.3,time*1.3),4.0)*0.1;\n\n    light -= pow((1.0-uv.y)*0.3,3.0);\n    light = clamp(light,0.0,1.0);\n\n    return light;\n}\n\nvoid main() {\n  // base texture\n  vec4 base = texture2D(textureSampler, vUV);\n\n  // no effect above water\n  if (cameraPosition.y >= 0.0) {\n    gl_FragColor.rgb = base.rgb;\n    gl_FragColor.w = 1.0;\n    return;\n  }\n\n  // apply visibility loss with distance\n  vec4 depthVec = texture2D(depthTexture, vUV);\n  vec4 oceanDepthVec = texture2D(oceanDepthTexture, vUV);\n  float Zdepth = depthVec.r;\n  float oceanZDepth = oceanDepthVec.r;\n\n  vec4 color;\n  if (oceanZDepth < Zdepth) {\n    // if we have no fog, this smoothing of the horizon is required.\n\n    // const float MAX_Z_SMOOTH = 0.6;\n    // if (oceanZDepth / Zdepth > MAX_Z_SMOOTH) {\n    //   // smooth out large Z, so we have a pretty infinity\n    //   color.rgb = mix(fogColor, base.rgb, smoothstep(1.0, 0.0, oceanZDepth / Zdepth * MAX_Z_SMOOTH));\n    // }\n    // else {\n    //   // just the ocean, thanks\n    //   color.rgb = base.rgb;\n    // }\n    color.rgb = base.rgb;\n    Zdepth = oceanZDepth;\n  }\n  else {\n    // apply underwater effects\n\n    // god rays\n    vec3 skyColor = SEA_BASE_COLOR;\n    // TODO: godRays should take camera angle into consideration\n    vec3 godRays = 0.7*(godRaysCalc(vUV*2.)*mix(float(skyColor), 1.0, vUV.y*vUV.y) * vec3(0.7,1.0,1.0));\n\n    // TODO: noise\n    // TODO: color loss with depth\n    vec4 caustic = texture2D(causticTexture, vUV);\n\n    // color.rgb = base.rgb; // plain\n    // color.r = actualDepth.r; // plain\n    // color.rgb = caustic.rgb; // pure caustic\n    // color.rgb = godRays; // pure god rays\n    // color.rgb = vec3(distance, distance, distance); ; // just depth\n    // color.rgb = vec3(distance / cameraMinMaxZ.y, distance / cameraMinMaxZ.y, distance / cameraMinMaxZ.y); // normalized depth\n    color.rgb = mix(base.rgb, caustic.rgb, clamp(caustic.a * 0.5 * Zdepth, 0.2, 0.7)); // caustics + texture\n  }\n\n  // actual distance from the lens in scene units\n  float distance = (cameraMinMaxZ.x + (cameraMinMaxZ.y - cameraMinMaxZ.x)*Zdepth);\n  float normalizedDistance = distance / cameraMinMaxZ.y;\n  float fogFactor = clamp(\n    1.4 * fogFactorExp(normalizedDistance, FOG_DENSITY * FOG_DISTANCE_CORRECTION),\n    0.0,\n    1.0\n  );\n  // color.rgb = vec3(fogFactor, fogFactor, fogFactor); // pure fog\n  // color.rgb = mix(base.rgb, fogColor, fogFactor); // fog + texture\n  color.rgb = mix(\n    color.rgb,\n    fogColor,\n    fogFactor\n  ); // + godRays; // everything\n\n  // color, saturation, brightness\n  color.rgb = csb(color.rgb, 1.1, 1.05, 1.22);\n\n  // Vignette\n  // color.rgb = mix(color.rgb, vec3(.0), abs(vUV.x - 0.5)*abs(vUV.y * 2.0 - 1.0));\n\n  gl_FragColor.rgb = color.rgb;\n  gl_FragColor.w = 1.0; //base.w;\n}\n"},344:function(e,t,n){"use strict";n.r(t),t.default="#ifdef GL_ES\nprecision highp float;\n#endif\n\nuniform vec3 color;\nuniform float time;\n\nvarying vec2 vUV;\nvarying vec3 vNormal;\nvarying vec3 vPosition;\n\nuniform sampler2D normalMap;\nuniform samplerCube environmentMap;\n\nvec4 getNoise( vec2 uv )\n{\n\tvec2 uv0 = ( uv / 103.0 ) + vec2(time / 17.0, time / 29.0);\n\tvec2 uv1 = uv / 107.0-vec2( time / -19.0, time / 31.0 );\n\tvec2 uv2 = uv / vec2( 8907.0, 9803.0 ) + vec2( time / 101.0, time / 97.0 );\n\tvec2 uv3 = uv / vec2( 1091.0, 1027.0 ) - vec2( time / 109.0, time / -113.0 );\n\tvec4 noise = vec4(0.0, 0.0, 0.0, 0.0);\n      texture2D( normalMap, uv0 ) +\n      texture2D( normalMap, uv1 ) +\n      texture2D( normalMap, uv2 ) +\n      texture2D( normalMap, uv3 );\n\treturn noise * 0.5 - 1.0;\n}\n\nvoid main(void) {\n  float alpha = 1.0;\n  float reflectivity = 0.3;\n  vec4 finalColor = vec4(color, alpha);\n  vec3 eyePos = normalize(vec3(vUV.xy, -3.0));\n\n//   vec3 eyePos = viewInverse[3].xyz;\n  vec3 viewDirection = normalize(eyePos - vPosition);\n\n  vec3 normal = vNormal;\n  normal = normalize(getNoise(vPosition.xz * 6.0).xyz * vec3( 1.5, 1.0, 1.5 ));\n  vec3 envTexel = textureCube(environmentMap, reflect(-viewDirection, normal)).xyz;\n  finalColor.rgb = finalColor.rgb + envTexel * reflectivity;\n\n  gl_FragColor = finalColor;\n}\n"},345:function(e,t,n){"use strict";n.r(t),t.default="#ifdef GL_ES\nprecision highp float;\n#endif\n\nuniform vec3 waterColor;\nuniform float time;\nuniform vec3 cameraPosition;\nuniform sampler2D channel2;\nuniform sampler2D channel3;\n\nvarying vec2 vUV;\nvarying vec3 vNormal;\nvarying vec3 vPosition;\n\n#define csb(f, con, sat, bri) mix(vec3(.5), mix(vec3(dot(vec3(.2125, .7154, .0721), f*bri)), f*bri, sat), con)\n\nvoid main(void) {\n  vec3 col = vec3(waterColor); // final color\n  const vec2 sun = vec2(-0.1, 0.6); // sun position\n  vec2 uv = vUV;\n  vec3 pos = vPosition;\n  vec3 dir = normalize(vec3(uv, -1.4));\n\n \t// calculate sun\n\tfloat i = max(0.0, 1.0-length(sun-uv));\n\tcol = vec3(pow(i, 1.9), pow(i, 1.0), pow(i, .8)) * 1.3;\n\n\t// Water distance colour...\n  float viewAngle = abs(dot(normalize(cameraPosition-vPosition), vec3(0, 1, 0)));\n\tcol = mix(col, vec3(0.0, .25, .45), ((1.0-vUV.y)*.45) * 1.8);\n\n  // Add water ripples...\n  float d = (3.0-pos.y) / -uv.y;\n  vec2 wat = (dir * d).xz-pos.xz;\n  wat +=  (texture(channel2, (wat*.03+time*.01)*.1, 1.0).z -\n    texture(channel3, wat*.02-time*.01, .0).y) * .4;\n  i = texture(channel3, wat* .02, 0.0).x;\n  col += vec3(i) * max(abs(uv.y), 0.0);\n\n  // contrast, saturation, brightness\n  col = csb(col, 1.1, 1.05, 1.22);\n\n  // handle horizon\n  col = mix(waterColor, col, clamp(viewAngle*3.0 - 0.3, 0.0, 1.0));\n\n  gl_FragColor.rgb = col;\n}\n"},346:function(e,t,n){"use strict";n.r(t),t.default="precision highp float;\n\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\n\nuniform mat4 view;\nuniform mat4 projection;\nuniform mat4 worldViewProjection;\nuniform vec2 cameraMinMaxZ;\n\nvarying vec2 vUV;\nvarying vec3 vNormal;\nvarying vec3 vPosition;\n\n#include<bonesDeclaration>\n#include<instancesDeclaration>\n\nvoid main() {\n    vec3 positionUpdated = position;\n\n    // include shaders to calculate instances and bones\n    #include<instancesVertex>\n    #include<bonesVertex>\n\n    // return normal, uv and position\n    vec4 worldPos = finalWorld * vec4(positionUpdated, 1.0);\n    vec4 viewPos = view * worldPos;\n\n    vNormal = normalize(vec3(finalWorld * vec4(normal, 0.0)));\n    vPosition = worldPos.xyz;\n    // TODO vUV = uv * uvRepeat + uvOffset;\n    vUV = uv;\n\n    gl_Position = projection * viewPos;\n}\n"},347:function(e,t,n){"use strict";n.r(t),t.default="#ifdef GL_ES\nprecision highp float;\n#endif\n\n#define TAU 6.28318530718\n#define MAX_ITER 5\n#define SPEED 0.3\n#define SCALE 30.0\n\nuniform float time;\n\nvarying vec2 vUV;\nvarying vec3 vNormal;\nvarying vec3 vPosition;\n\nvec4 caustic(vec2 uv) {\n  vec2 p = mod(uv*TAU, TAU)-250.0;\n  float t = time * SPEED + 23.0;\n\n  vec2 i = vec2(p);\n  float c = 1.0;\n  float inten = .005;\n\n  for (int n = 0; n < MAX_ITER; n++) {\n    float t = t * (1.0 - (3.5 / float(n+1)));\n    i = p + vec2(cos(t - i.x) + sin(t + i.y), sin(t - i.y) + cos(t + i.x));\n    c += 1.0/length(vec2(p.x / (sin(i.x+t)/inten),p.y / (cos(i.y+t)/inten)));\n  }\n\n  c /= float(MAX_ITER);\n  c = 1.17-pow(c, 1.4);\n  vec3 color = vec3(pow(abs(c), 8.0));\n  color = clamp(color + vec3(0.0, 0.0, 0.0), 0.0, 1.0);\n\n  float alpha=0.5;\n  float contrast=0.0;\n  color = mix(color, vec3(1.0,1.0,1.0),contrast);\n  //color.a = alpha;\n  vec4 color4 = vec4(color,0.0);\n\n  return color4;\n}\n\n/*\n * Fragment shader for caustic and babylonjs. Renders a fake caustic, using an\n * animated noise function and the world coordinates as UV.\n */\nvoid main(void)\n{\n  // TODO: y coordinate should multiply caustic to reduce light on higher ocean depths\n\n  vec2 coord = vec2(fract(vPosition.x/SCALE), fract(vPosition.z/SCALE));\n  if (vNormal.y > 0.0 && vPosition.y < 0.0) {\n    // scale by normal to make caustic less pronounced for more vertical faces.\n    gl_FragColor = clamp(caustic(coord), 0.0, 1.0) * vNormal.y;\n    gl_FragColor.a = 1.0;\n  }\n  else {\n    gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n  }\n}\n\n"},348:function(e,t,n){"use strict";n.r(t),t.default="#ifdef GL_ES\nprecision highp float;\n#endif\n\nuniform float time;\n\nvarying vec2 vUV;\nvarying vec3 vNormal;\nvarying vec3 vPosition;\n\n/*\n * simple pure black shader for objects that should not render caustics.\n */\nvoid main(void)\n{\n  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\n}\n\n"},349:function(e,t,n){"use strict";n(263)},350:function(e,t,n){var r=n(32)(!1);r.push([e.i,"#underwater[data-v-58eb7295]{position:relative}#underwater[data-v-58eb7295],#underwater-3d[data-v-58eb7295]{height:100vh;width:100vw}#underwater-debug[data-v-58eb7295]{top:0;right:0}#underwater-debug[data-v-58eb7295],#underwater-hud[data-v-58eb7295]{position:absolute;padding:10px;z-index:1000;border-radius:10px;background:#000;color:#fff;text-align:right}#underwater-hud[data-v-58eb7295]{bottom:0;left:0;width:160px;height:220px;font-family:monospace}#underwater-hud span[data-v-58eb7295]{display:inline-block}#underwater-hud #underwater-hud-compass[data-v-58eb7295],#underwater-hud #underwater-hud-time[data-v-58eb7295]{margin-top:10px}#underwater-hud #underwater-hud-compass-value[data-v-58eb7295],#underwater-hud #underwater-hud-depth-value[data-v-58eb7295],#underwater-hud #underwater-hud-time-value[data-v-58eb7295]{line-height:.9;font-size:42px;font-family:monospace}#underwater-hud #underwater-hud-depth-ascent[data-v-58eb7295]{-ms-writing-mode:tb-rl;writing-mode:vertical-rl}#underwater-hud #underwater-hud-compass-name[data-v-58eb7295],#underwater-hud #underwater-hud-depth-name[data-v-58eb7295],#underwater-hud #underwater-hud-time-name[data-v-58eb7295]{color:#4c70ff}#underwater-hud #underwater-hud-depth-unit[data-v-58eb7295],#underwater-hud #underwater-hud-time-unit[data-v-58eb7295]{vertical-align:top}",""]),e.exports=r},440:function(e,t,n){"use strict";n.r(t);var r=n(192),o=n(84);var c=n(118),l=n(64);function d(e){return function(e){if(Array.isArray(e))return Object(o.a)(e)}(e)||Object(c.a)(e)||Object(l.a)(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}n(41),n(16),n(40),n(34),n(210),n(71),n(72),n(39),n(26),n(42);var h=n(203),f=(n(224),n(232)),v=n(88),m=n(90);function y(e,t){var n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=function(e,t){if(!e)return;if("string"==typeof e)return w(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return w(e,t)}(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var i=0,r=function(){};return{s:r,n:function(){return i>=e.length?{done:!0}:{done:!1,value:e[i++]}},e:function(e){throw e},f:r}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,c=!0,l=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return c=e.done,e},e:function(e){l=!0,o=e},f:function(){try{c||null==n.return||n.return()}finally{if(l)throw o}}}}function w(e,t){(null==t||t>e.length)&&(t=e.length);for(var i=0,n=new Array(t);i<t;i++)n[i]=e[i];return n}var x=function(){function e(t,n,r){Object(v.a)(this,e),this.id=t,this.position=n,this.velocity=r,this.force=new BABYLON.Vector3(0,0,0)}return Object(m.a)(e,[{key:"orientation",get:function(){return this.velocity.normalize()}}]),e}(),M=function(){function e(t,n){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:100,c=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;Object(v.a)(this,e),this.cohesion=.3,this.separation=.4,this.alignment=1,this.separationMinDistance=3,this.maxSpeed=1,this.boundsMin=new BABYLON.Vector3(n.x-o,n.y-o,n.z-o),this.boundsMax=new BABYLON.Vector3(n.x+o,n.y+o,n.z+o),this.otherForces=[],this.boids=[],this.debug={show:!1,influences:[],arrows:[]},c||(c=new BABYLON.Vector3(.3,.1,.3));var l=c.length();this.center=n.clone(),this.avgVel=new BABYLON.Vector3(0,0,0);for(var i=0;i<t;i++){var d=this.center.add(new BABYLON.Vector3((Math.random()-.5)*r,(Math.random()-.5)*r,(Math.random()-.5)*r)),h=new BABYLON.Vector3(c.x+(Math.random()-.5)/10*l,c.y+(Math.random()-.5)/10*l,c.z+(Math.random()-.5)/10*l),f=new x(i,d,h);this.boids.push(f)}}return Object(m.a)(e,[{key:"update",value:function(e){var t=this;this._updateCenter();var n=this.maxSpeed*this.maxSpeed;this.boids.forEach((function(r){var o=t._forceCentreMass(r),c=t._forceSeparation(r),l=t._forceMatchVelocity(r),d=t._forceBoundaries(r),h=o.add(c).add(l).add(d);t.otherForces.forEach((function(e){h.add(e(t,r))})),r.force.copyFrom(h),r.velocity.addInPlace(h.scale(e)),r.velocity.lengthSquared()>n&&(r.velocity=r.velocity.normalize().scale(t.maxSpeed)),r.position.addInPlace(r.velocity.scale(e))})),this._updateDebug()}},{key:"_updateCenter",value:function(){if(this.boids.length){var e=new BABYLON.Vector3(0,0,0),t=new BABYLON.Vector3(0,0,0);this.boids.forEach((function(n){e.addInPlace(n.position),t.addInPlace(n.velocity)})),e.scaleInPlace(1/this.boids.length),t.scaleInPlace(1/this.boids.length),this.center=e,this.avgVel=t}}},{key:"_forceCentreMass",value:function(e){return this.center.subtract(e.position).scale(this.cohesion)}},{key:"_forceSeparation",value:function(e){var t=this,n=new BABYLON.Vector3(0,0,0);return this.boids.forEach((function(r){if(e.id!==r.id){var o=e.position.subtract(r.position),c=o.length();c<t.separationMinDistance&&n.addInPlace(o.scale(t.separationMinDistance-c))}})),n.scale(this.separation)}},{key:"_forceMatchVelocity",value:function(e){return this.avgVel.subtract(e.velocity).scale(this.alignment)}},{key:"_forceBoundaries",value:function(e){var t=new BABYLON.Vector3(0,0,0),n=.2;return e.position.x<.9*this.boundsMin.x?t.x=n:e.position.x>.9*this.boundsMax.x&&(t.x=-.2),e.position.y<.9*this.boundsMin.y?t.y=n:e.position.y>.9*this.boundsMax.y&&(t.y=-.2),e.position.z<.9*this.boundsMin.z?t.z=n:e.position.z>.9*this.boundsMax.z&&(t.z=-.2),t}},{key:"addForce",value:function(e){this.otherForces.push(e)}},{key:"showDebug",value:function(e){if(!this.debug.show){var t=new BABYLON.StandardMaterial("debug_center",e);t.diffuseColor=BABYLON.Color3.FromHexString("#FF0000"),this.debug.center=BABYLON.MeshBuilder.CreateSphere("center",{diameter:.1,segments:8});var n=new BABYLON.StandardMaterial("debug_bbox",e);n.diffuseColor=BABYLON.Color3.FromHexString("#00FF00"),n.wireframe=!0,this.debug.center.material=t,this.debug.bbox=BABYLON.Mesh.CreateBox("boids_bbox",1,e),this.debug.bbox.scaling.x=Math.abs(this.boundsMax.x-this.boundsMin.x),this.debug.bbox.scaling.y=Math.abs(this.boundsMax.y-this.boundsMin.y),this.debug.bbox.scaling.z=Math.abs(this.boundsMax.z-this.boundsMin.z),this.debug.bbox.position.x=Math.abs(this.boundsMax.x-this.boundsMin.x)/2,this.debug.bbox.position.y=Math.abs(this.boundsMax.y-this.boundsMin.y)/2,this.debug.bbox.position.z=Math.abs(this.boundsMax.z-this.boundsMin.z)/2,this.debug.bbox.material=n;var r=new BABYLON.StandardMaterial("debug_wireframe",e);r.diffuseColor=BABYLON.Color3.FromHexString("#FFFFFF"),r.wireframe=!0;var o,c=y(this.boids);try{for(c.s();!(o=c.n()).done;){var l=o.value;l.debug={},l.debug.force=BABYLON.MeshBuilder.CreateTube("boid_arrow_".concat(l.uniqueId),{path:[l.position.add(l.velocity),l.position.clone()],radius:.01,updatable:!0},e),l.debug.influence=BABYLON.MeshBuilder.CreateSphere("boid_influence_".concat(l.uniqueId),{diameter:1,segments:8}),l.debug.influence.scaling.setAll(this.separationMinDistance),l.debug.influence.material=r}}catch(e){c.e(e)}finally{c.f()}this.debug.show=!0}}},{key:"hideDebug",value:function(e){this.debug.show=!1,this.debug.center=void 0;var t,n=y(this.boids);try{for(n.s();!(t=n.n()).done;){var r=t.value;r.debug&&(r.debug.force.dispose(),r.debug.influence.dispose(),r.debug={})}}catch(e){n.e(e)}finally{n.f()}}},{key:"_updateDebug",value:function(){if(this.debug.show){this.debug.center.position.copyFrom(this.center);var e,t=y(this.boids);try{for(t.s();!(e=t.n()).done;){var n=e.value,path=[n.position.add(n.force.scale(20)),n.position.clone()];n.debug.force=BABYLON.MeshBuilder.CreateTube(n.debug.force.name,{path:path,radius:.01,instance:n.debug.force}),n.debug.influence.position.copyFrom(n.position)}}catch(e){t.e(e)}finally{t.f()}}}},{key:"gui",value:function(e){var t=this,n=BABYLON.GUI,r=n.AdvancedDynamicTexture.CreateFullscreenUI("UI",void 0,void 0,e),o=new n.StackPanel;o.width="220px",o.horizontalAlignment=n.Control.HORIZONTAL_ALIGNMENT_RIGHT,o.verticalAlignment=n.Control.VERTICAL_ALIGNMENT_CENTER,r.addControl(o);var c=function(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:4,c=arguments.length>2&&void 0!==arguments[2]?arguments[2]:function(){},header=new n.TextBlock;header.text="".concat(e," ").concat(t[e]),header.height="30px",header.color="white",o.addControl(header);var l=new n.Slider;l.minimum=0,l.maximum=r,l.value=t[e],l.height="20px",l.width="200px";var d=function(e,header,t){return function(n){e[t]=n,header.text="".concat(t," ").concat(n),c.apply(e)}}(t,header,e);l.onValueChangedObservable.add(d),o.addControl(l)};c("cohesion",1.5),c("separation"),c("alignment"),c("separationMinDistance",50,(function(e){t.debug.center&&t.boids.forEach((function(e){e.debug.influence.scaling.setAll(t.separationMinDistance)}))}));var header=new n.TextBlock;header.text="show debug helpers",header.height="30px",header.color="white",o.addControl(header);var l=new n.Checkbox;l.width="20px",l.height="20px",l.isChecked=this.debug.show,l.color="green",l.onIsCheckedChangedObservable.add((function(n){n?t.showDebug(e):t.hideDebug(e)})),o.addControl(l)}}]),e}(),_=M;function S(e,t){var n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=function(e,t){if(!e)return;if("string"==typeof e)return T(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return T(e,t)}(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var i=0,r=function(){};return{s:r,n:function(){return i>=e.length?{done:!0}:{done:!1,value:e[i++]}},e:function(e){throw e},f:r}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,c=!0,l=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return c=e.done,e},e:function(e){l=!0,o=e},f:function(){try{c||null==n.return||n.return()}finally{if(l)throw o}}}}function T(e,t){(null==t||t>e.length)&&(t=e.length);for(var i=0,n=new Array(t);i<t;i++)n[i]=e[i];return n}var C=n(342),E=n(343),P=n(344),A=n(345),O=n(346),D=n(347),R=n(348),z=n(262),I=n(262),N={props:{},data:function(){return{engine:null,scene:null,camera:null,assetsManager:null,oceanPostProcess:null,renderTargetCaustic:null,causticMaterial:null,causticBlackMaterial:null,waterMaterial:null,rttMaterials:[],mantas:[],turtles:[],ascentSpeed:0,depth:0,lastDepth:0,time:0,air:100,fps:0,orientationDegrees:0}},computed:{base:function(){return this.$router.options.base},ascentSpeedColor:function(){return this.ascentSpeed<1/60?"#000":this.ascentSpeed<.1||this.ascentSpeed<.2?"#0f0":this.ascentSpeed<.3?"#ff0":"#f00"},ascentSpeedGraph:function(){return this.ascentSpeed<1/60||this.ascentSpeed<.1?"<":this.ascentSpeed<.2?"<<":this.ascentSpeed<.3?"<<<":"<<<<"}},mounted:function(){var e=this,t=document.getElementById("underwater-3d");this.bootScene(t),this.lights(),this.materials(),this.composer();var n=[];n.push(this.loadTerrain()),Promise.all(n).then((function(){console.log("all loaded")})),this.assetsManager.load(),this.$route.query.debug&&(this.camera.speed=.5,this.debugUtils()),window.ccc=this.camera;var r=new Date,o=!1;this.engine.runRenderLoop((function(){var t=new Date,n=(t-r)/1e3,c=e.engine.getDeltaTime()/1e3,l=e.camera.position.y<=0;o!==l&&(o=l),e.depth=o?(-e.camera.position.y).toFixed(1):0,e.time=n,e.ascentSpeed=(e.camera.position.y-e.lastDepth)/c,e.lastDepth=e.camera.position.y,e.orientationDegrees=180*e.camera.rotation.y/Math.PI;var d=document.getElementById("inspector-host");d&&(d.style.position="absolute"),e.causticMaterial&&e.causticMaterial.setFloat("time",n),e.waterMaterial&&(e.waterMaterial.setFloat("time",n),e.waterMaterial.setVector3("cameraPosition",e.camera.position)),e.rttMaterials.forEach((function(e){e.setFloat("time",n)}));var f=0,v=t/1e4,m=new h.Vector3(Math.sin(v+Math.PI/2),0,Math.cos(v+Math.PI/2)),y=10*Math.sin(v),w=10*Math.cos(v);e.mantas.forEach((function(e){var t,n=S(e.rootNodes);try{for(n.s();!(t=n.n()).done;){var r=t.value;r.position.x=y+2*f,r.position.y=10-1.5*f,r.position.z=w+2*f,r.setDirection(m)}}catch(e){n.e(e)}finally{n.f()}f++})),e.fps=e.engine.getFps().toFixed(),e.scene.render()})),window.addEventListener("resize",this.resize)},beforeDestroy:function(){window.removeEventListener("resize",this.resize),this.engine.stopRenderLoop(),this.scene.dispose(),this.scene=null,this.engine=null},methods:{bootScene:function(e){function t(){this.loadingUIText="Mergulho na Laje de Santos"}t.prototype.displayLoadingUI=function(){alert(this.loadingUIText)},t.prototype.hideLoadingUI=function(){alert("Loaded!")},this.engine=new h.Engine(e,!0),this.engine.loadingUIText="Mergulho na Laje de Santos",this.scene=new h.Scene(this.engine),this.scene.clearColor=new h.Color3(0,.55,.85),this.camera=new h.UniversalCamera("Camera",new h.Vector3(-14.12,-28.2,27.19),this.scene),this.camera.applyGravity=!1,this.camera.speed=.05,this.camera.ellipsoid=new h.Vector3(.5,1,.5),this.camera.keysUp.push("w".charCodeAt(0)),this.camera.keysUp.push("W".charCodeAt(0)),this.scene.onKeyboardObservable.add((function(e){switch(e.type){case h.KeyboardEventTypes.KEYDOWN:console.log("KEY DOWN: ",e.event.key);break;case h.KeyboardEventTypes.KEYUP:console.log("KEY UP: ",e.event.keyCode)}})),this.camera.minZ=.1,this.camera.maxZ=700,this.camera.setTarget(new h.Vector3(-15.2,.36,27.62)),this.camera.attachControl(e,!0),this.scene.collisionsEnabled=!0,this.camera.checkCollisions=!0,this.scene.freezeActiveMeshes(),this.scene.autoClear=!1,this.scene.autoClearDepthAndStencil=!1,this.assetsManager=new h.AssetsManager(this.scene),this.assetsManager.onTaskErrorObservable.add((function(e){console.error("task failed",e.errorObject.message,e.errorObject.exception)}))},sceneOptimizer:function(){return h.SceneOptimizer.OptimizeAsync(this.scene)},debugUtils:function(){this.scene.debugLayer.show()},resize:function(){},lights:function(){var e=new h.HemisphericLight("light1",new h.Vector3(1,1,0),this.scene);e.diffuse=h.Color3.FromHexString("#CCCCCC"),e.intensity=.4,new h.DirectionalLight("DirectionalLight",new h.Vector3(.2,-1,0),this.scene).diffuse=h.Color3.FromHexString("#FFFFFF"),e.intensity=.8},getCausticMaterial:function(){var e=this.causticMaterial.clone();return e.freeze(),this.rttMaterials.push(e),e},getCausticBlackMaterial:function(){var e=this.causticBlackMaterial.clone();return e.freeze(),this.rttMaterials.push(e),e},materials:function(){h.Effect.ShadersStore.causticVertexShader=z.default,h.Effect.ShadersStore.causticFragmentShader=D.default,h.Effect.ShadersStore.causticblackVertexShader=I.default,h.Effect.ShadersStore.causticblackFragmentShader=R.default,this.causticMaterial=new h.ShaderMaterial("caustic material",this.scene,"caustic",{attributes:["position","normal","uv"],uniforms:["world","worldView","worldViewProjection","view","projection","time","direction"]}),this.causticMaterial.freeze(),this.causticBlackMaterial=new h.ShaderMaterial("caustic black material",this.scene,"causticblack",{attributes:["position","normal","uv"],uniforms:["world","worldView","worldViewProjection","view","projection","time","direction"]}),this.causticBlackMaterial.freeze(),h.Effect.ShadersStore.seaVertexShader=O.default,h.Effect.ShadersStore.seaFragmentShader=P.default,h.Effect.ShadersStore.sea2VertexShader=O.default,h.Effect.ShadersStore.sea2FragmentShader=A.default},composer:function(){var e=this;h.Effect.ShadersStore.underwaterVertexShader=C.default,h.Effect.ShadersStore.underwaterFragmentShader=E.default;var t=this.scene.enableDepthRenderer(),n=new h.PassPostProcess("imagePass",1,null,h.Texture.NEAREST_SAMPLINGMODE,this.engine);this.renderTargetCaustic=new h.RenderTargetTexture("caustic",1024,this.scene),this.scene.customRenderTargets.push(this.renderTargetCaustic),this.setRTTMaterials();var r=new h.PostProcess("Underwater pass","underwater",["fogColor","cameraMinMaxZ","cameraPosition","time"],["depthTexture","causticTexture","oceanDepthTexture"],1,null,0,this.engine),o=new h.PostProcessRenderPipeline(this.engine,"pipeline"),c=this.loadOceanPP();this.oceanPostProcess=c,this.oceanPostProcess.autoClear=!1;var l=!0,d=null;c.onApplyObservable.add((function(t){if(l){l=!1;var n=r.inputTexture;(d=n.createDepthStencilTexture(void 0,void 0,e.engine.isStencilEnable)).name="underwaterDepthStencil"}e.engine.setDepthBuffer(!0),e.engine.setDepthWrite(!0),e.engine.clear(null,!1,!0,!1)})),r.onApplyObservable.add((function(e){e._bindTexture("oceanDepthTexture",d)}));var f=new Date;r.onApply=function(n){var r=(new Date-f)/1e3;n.setColor3("fogColor",e.scene.clearColor),n.setFloat2("cameraMinMaxZ",e.camera.minZ,e.camera.maxZ),n.setFloat("time",r),n.setTexture("causticTexture",e.renderTargetCaustic),n.setTexture("depthTexture",t.getDepthMap()),n.setVector3("cameraPosition",e.camera.position)};var v=new h.FxaaPostProcess("fxaa",1,null,null,this.engine),m=new h.PostProcessRenderEffect(this.engine,"renderLayer",(function(){return[n,c,r,v]}));o.addEffect(m),o.samples=4,o.fxaaEnabled=!0,this.scene.postProcessRenderPipelineManager.addPipeline(o),this.scene.postProcessRenderPipelineManager.attachCamerasToRenderPipeline("pipeline",this.camera)},loadOceanPP:function(){var e=function(e){return Math.pow(2,Math.ceil(Math.log(e)/Math.log(2)))},t={width:e(this.camera.getEngine().getRenderWidth()),height:e(this.camera.getEngine().getRenderHeight())};t.width>2048&&(t.width=2048),t.height>2048&&(t.height=2048),t.isPipeline=!0;var n=new f.a("myOcean",this.camera,t);return n.reflectionEnabled=!1,n.refractionEnabled=!1,n},loadSky:function(){var e=h.Mesh.CreateBox("skyBox",500,this.scene),t=new h.StandardMaterial("skyBox",this.scene);t.backFaceCulling=!1,t.reflectionTexture=new h.CubeTexture(this.$router.options.base+"textures/TropicalSunnyday/TropicalSunnyDay",this.scene),t.reflectionTexture.coordinatesMode=h.Texture.SKYBOX_MODE,t.diffuseColor=new h.Color3(0,0,0),t.specularColor=new h.Color3(0,0,0),t.disableLighting=!0,t.freeze(),e.material=t,e.alwaysSelectAsActiveMesh=!0,e.doNotSyncBoundingInfo=!0,e.convertToUnIndexedMesh(),e.freezeNormals(),e.freezeWorldMatrix()},setRTTMaterialsSlow:function(){var e=this;this.renderTargetCaustic.onBeforeRender=function(){for(var i in e.renderTargetCaustic.renderList)e.renderTargetCaustic.renderList[i]._saved=e.renderTargetCaustic.renderList[i].material,e.renderTargetCaustic.renderList[i].material=e.renderTargetCaustic.renderList[i].rttMaterial},this.renderTargetCaustic.onAfterRender=function(){for(var i in e.renderTargetCaustic.renderList)e.renderTargetCaustic.renderList[i].material=e.renderTargetCaustic.renderList[i]._saved}},setRTTMaterials:function(){var e=this;this.renderTargetCaustic.onBeforeRender=function(t){e.renderTargetCaustic.renderList.forEach((function(e){if("InstancedMesh"!==e.getClassName()){if(e.material&&!e.isFrozen&&"isReady"in e&&e.isReady(!0)){var t=[];e.subMeshes.forEach((function(e){t.push([e.effect,e._materialDefines])})),e.isFrozen=!0,e.material.freeze(),e._saved_orig_material=e.material,e._origSubMeshEffects=t}if(e._origSubMeshEffects&&(e.material=e.rttMaterial,e._rtt_subMeshEffects))for(var s=0;s<e.subMeshes.length;++s){var n;(n=e.subMeshes[s]).setEffect.apply(n,d(e._rtt_subMeshEffects[s]))}}}))},this.renderTargetCaustic.onAfterRender=function(){e.renderTargetCaustic.renderList.forEach((function(e){if("InstancedMesh"!==e.getClassName()&&e._origSubMeshEffects){e._rtt_subMeshEffects||(e._rtt_subMeshEffects=[],e.subMeshes.forEach((function(t){e._rtt_subMeshEffects.push([t.effect,t._materialDefines])}))),e.material=e._saved_orig_material;for(var s=0;s<e.subMeshes.length;++s){var t;(t=e.subMeshes[s]).setEffect.apply(t,d(e._origSubMeshEffects[s]))}}}))}},addToSceneAndCaustic:function(e){var t=this,n=this.getCausticMaterial();return e.forEach((function(e){e.rttMaterial=n,t.renderTargetCaustic.renderList.push(e)})),n},loadTerrain:function(){var e=this;return new Promise((function(t,n){var r=[],o=[],c=[],l=[],d=!1,f=function(){if(d){h.BoxBuilder.CreateBox("root",{size:1});for(var n=o.length,f=new Float32Array(16*n),i=0;i<o.length;i++){h.Matrix.Compose(l[i],c[i],o[i]).copyToArray(f,16*i)}r[1].thinInstanceSetBuffer("matrix",f,16),e.addToSceneAndCaustic([r[1]]).backFaceCulling=!1,t()}else d=!0};e.assetsManager.addMeshTask("rocks",null,e.base+"models/ilha/","rocks.glb").onSuccess=function(e){e.loadedMeshes.forEach((function(e){"rockLow1"!==e.name&&"rockLow1.001"!==e.name&&"rockLow1.002"!==e.name||(e.freezeNormals(),e.freezeWorldMatrix(),e.material&&e.material.freeze(),r.push(e))})),f()},e.assetsManager.addMeshTask("terrain",null,e.base+"models/ilha/","ilha.glb").onSuccess=function(t){var n=[];t.loadedMeshes.forEach((function(e){if(e.name.includes("rock"))return e.computeWorldMatrix(),o.push(e.getAbsolutePivotPoint()),c.push(e.rotationQuaternion),l.push(e.absoluteScaling),void e.dispose();e.freeze&&(e.doNotSyncBoundingInfo=!0,e.material&&e.material.freeze(),e.alwaysSelectAsActiveMesh=!0,e.cullingStrategy=h.AbstractMesh.CULLINGSTRATEGY_OPTIMISTIC_INCLUSION,e.convertToUnIndexedMesh(),e.freezeNormals(),e.freezeWorldMatrix(),e.freeze(),e.bakeCurrentTransformIntoVertices()),n.push(e)})),e.addToSceneAndCaustic(n).backFaceCulling=!1,f()}}))},loadBoat:function(){},loadTurtle:function(){var e=this;return new Promise((function(t,n){e.assetsManager.addMeshTask("tartaruga",null,e.base+"models/tartaruga/","tartaruga.glb").onSuccess=function(n){var r,o=S(n.loadedMeshes);try{for(o.s();!(r=o.n()).done;){var c=r.value;for(var a in c.position=e.camera.position.clone(),c.position.x+=10,c.animationGroups)a.start(!0);c.material&&c.material.freeze(),c.alwaysSelectAsActiveMesh=!0,c.cullingStrategy=h.AbstractMesh.CULLINGSTRATEGY_OPTIMISTIC_INCLUSION,c.convertToUnIndexedMesh(),c.freezeNormals(),c.freezeWorldMatrix(),e.turtles.push(c)}}catch(e){o.e(e)}finally{o.f()}e.scene.onBeforeRenderObservable.add((function(){n.loadedSkeletons.forEach((function(e){return e.prepare()}))})),t()}}))},loadFlock:function(e,t,n,r){var o=this,c=arguments.length>4&&void 0!==arguments[4]&&arguments[4],l=new _(n,r,10,20);l.cohesion=.05,l.separationMinDistance=1,l.maxSpeed=.2;var d=null,f=new Float32Array(16*n),p=new Promise((function(l,f){o.assetsManager.addMeshTask("tartaruga",null,o.base+e,t).onSuccess=function(e){var f=c?o.getCausticMaterial():null;if(0!==e.loadedMeshes.length)throw new Error("Invalid number of meshes for loadFlock: "+t);for(var a in(d=e.loadedMeshes[0]).position=r,d.animationGroups)a.start(!0);f&&(d.rttMaterial=f,o.renderTargetCaustic.renderList.push(d)),d.material&&d.material.freeze(),d.alwaysSelectAsActiveMesh=!0,d.cullingStrategy=h.AbstractMesh.CULLINGSTRATEGY_OPTIMISTIC_INCLUSION,d.convertToUnIndexedMesh(),d.freezeNormals(),d.freezeWorldMatrix();for(var v=new Float32Array(16*n),i=0;i<n;i++){h.Matrix.Compose(new h.Vector3(1,1,1),new h.Quaternion(1,0,0,0),r+new h.Vector3(o.random(-1,1),o.random(-1,1),o.random(-1,1))).copyToArray(v,16*i)}d.thinInstanceSetBuffer("matrix",v,16),l()}}));return{models:[d],boidsManager:l,promise:p,update:function(e,t,n){return function(t){e.update(t);for(var i=0;i<n;i++){h.Matrix.Compose(l.boid.position,new h.Quaternion(l.boid.velocity.x,l.boid.velocity.y,l.boid.velocity.z,0),r).copyToArray(f,16*i)}d.thinInstanceSetBuffer("matrix",f,16)}}(l,0,n)}},loadMantas:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:2,p=new Promise((function(n,r){h.SceneLoader.LoadAssetContainer("/models/manta/","scene.gltf",e.scene,(function(n){n.addAllToScene();var r=e.getCausticMaterial();n.meshes.forEach((function(t){t.scaling=new h.Vector3(.02,.02,.02),t.position.y=10,t.setEnabled(!1),t.material&&t.material.freeze(),t.rttMaterial=r,e.renderTargetCaustic.renderList.push(t)}));for(var o=function(i){var t,r=n.instantiateModelsToScene((function(p){return"manta"+p+i})),o=S(r.rootNodes);try{for(o.s();!(t=o.n()).done;){var c=t.value;c.position.x+=10*(i+1),e.mantas.push(r),e.renderTargetCaustic.renderList.push(c),e.renderTargetCaustic.renderList=e.renderTargetCaustic.renderList.concat(c.getChildMeshes())}}catch(e){o.e(e)}finally{o.f()}var l,d=S(r.animationGroups);try{for(d.s();!(l=d.n()).done;){var h=l.value;h.speedRatio=1-.1*i,h.play(!0)}}catch(e){d.e(e)}finally{d.f()}},i=0;i<t;i++)o(i)})),n()}));return p},random:function(e,t){return Math.random()*(t-e)+e},clamp:function(e,t,n){return Math.min(Math.max(e,t),n)}}},V=N,B=(n(349),n(4)),L={components:{Underwater:Object(B.a)(V,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{attrs:{id:"underwater"}},[n("canvas",{attrs:{id:"underwater-3d","touch-action":"none"}}),e._v(" "),n("div",{attrs:{id:"underwater-debug"}},[e._v("\n    "+e._s(e.fps)+" fps\n  ")]),e._v(" "),n("div",{attrs:{id:"underwater-hud"}},[n("div",{attrs:{id:"underwater-hud-depth"}},[n("span",{attrs:{id:"underwater-hud-depth-name"}},[n("i18n",[e._v("Profundidade")])],1),n("br"),e._v(" "),n("span",{style:{color:e.ascentSpeedColor},attrs:{id:"underwater-hud-depth-ascent"}},[e._v(e._s(e.ascentSpeedGraph))]),e._v(" "),n("span",{attrs:{id:"underwater-hud-depth-value"}},[e._v(e._s(e.depth))]),e._v(" "),n("span",{attrs:{id:"underwater-hud-depth-unit"}},[e._v("m")])]),e._v(" "),n("div",{attrs:{id:"underwater-hud-time"}},[n("span",{attrs:{id:"underwater-hud-time-name"}},[n("i18n",[e._v("Tempo")])],1),n("br"),e._v(" "),n("span",{attrs:{id:"underwater-hud-time-value"}},[e._v(e._s(parseInt(e.time/60,10))+":"+e._s(parseInt(e.time%60,10).toString().padStart(2,"0")))])]),e._v(" "),n("div",{attrs:{id:"underwater-hud-compass"}},[n("span",{attrs:{id:"underwater-hud-compass-name"}},[n("i18n",[e._v("Compasso")])],1),n("br"),e._v(" "),n("span",{attrs:{id:"underwater-hud-compass-value"}},[e._v(e._s((parseInt(e.orientationDegrees)%360+360)%360))])])])])}),[],!1,null,"58eb7295",null).exports},extends:r.default,layout:"clean",data:function(){return{}},mounted:function(){this.head.title=this.$gettext("Mergulho virtual"),this.head.description=this.$gettext("Mergulho em realidade virtual na Laje de Santos")}},F=Object(B.a)(L,(function(){var e=this.$createElement,t=this._self._c||e;return t("article",[t("section",[t("Underwater")],1)])}),[],!1,null,null,null);t.default=F.exports}}]);