(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{182:function(e,t,r){var content=r(221);"string"==typeof content&&(content=[[e.i,content,""]]),content.locals&&(e.exports=content.locals);(0,r(19).default)("4949047c",content,!0,{sourceMap:!1})},220:function(e,t,r){"use strict";var n=r(182);r.n(n).a},221:function(e,t,r){(t=r(18)(!1)).push([e.i,"#ocean[data-v-b85cddc6]{position:absolute;height:100%}",""]),e.exports=t},247:function(e,t,r){"use strict";r.r(t);r(72),r(41),r(59),r(29),r(21);var n=r(172),o=r(244),l=r(215),m={};m.ocean_sim_vertex={vertexShader:["varying vec2 vUV;","void main (void) {","\tvUV = position.xy * 0.5 + 0.5;","\tgl_Position = vec4(position, 1.0 );","}"].join("\n")},m.ocean_subtransform={uniforms:{u_input:{value:null},u_transformSize:{value:512},u_subtransformSize:{value:250}},fragmentShader:["precision highp float;","#include <common>","uniform sampler2D u_input;","uniform float u_transformSize;","uniform float u_subtransformSize;","varying vec2 vUV;","vec2 multiplyComplex (vec2 a, vec2 b) {","\treturn vec2(a[0] * b[0] - a[1] * b[1], a[1] * b[0] + a[0] * b[1]);","}","void main (void) {","\t#ifdef HORIZONTAL","\tfloat index = vUV.x * u_transformSize - 0.5;","\t#else","\tfloat index = vUV.y * u_transformSize - 0.5;","\t#endif","\tfloat evenIndex = floor(index / u_subtransformSize) * (u_subtransformSize * 0.5) + mod(index, u_subtransformSize * 0.5);","\t#ifdef HORIZONTAL","\tvec4 even = texture2D(u_input, vec2(evenIndex + 0.5, gl_FragCoord.y) / u_transformSize).rgba;","\tvec4 odd = texture2D(u_input, vec2(evenIndex + u_transformSize * 0.5 + 0.5, gl_FragCoord.y) / u_transformSize).rgba;","\t#else","\tvec4 even = texture2D(u_input, vec2(gl_FragCoord.x, evenIndex + 0.5) / u_transformSize).rgba;","\tvec4 odd = texture2D(u_input, vec2(gl_FragCoord.x, evenIndex + u_transformSize * 0.5 + 0.5) / u_transformSize).rgba;","\t#endif","\tfloat twiddleArgument = -2.0 * PI * (index / u_subtransformSize);","\tvec2 twiddle = vec2(cos(twiddleArgument), sin(twiddleArgument));","\tvec2 outputA = even.xy + multiplyComplex(twiddle, odd.xy);","\tvec2 outputB = even.zw + multiplyComplex(twiddle, odd.zw);","\tgl_FragColor = vec4(outputA, outputB);","}"].join("\n")},m.ocean_initial_spectrum={uniforms:{u_wind:{value:new n.Vector2(10,10)},u_resolution:{value:512},u_size:{value:250}},vertexShader:["void main (void) {","\tgl_Position = vec4(position, 1.0);","}"].join("\n"),fragmentShader:["precision highp float;","#include <common>","const float G = 9.81;","const float KM = 370.0;","const float CM = 0.23;","uniform vec2 u_wind;","uniform float u_resolution;","uniform float u_size;","float omega (float k) {","\treturn sqrt(G * k * (1.0 + pow2(k / KM)));","}","#if __VERSION__ == 100","float tanh (float x) {","\treturn (1.0 - exp(-2.0 * x)) / (1.0 + exp(-2.0 * x));","}","#endif","void main (void) {","\tvec2 coordinates = gl_FragCoord.xy - 0.5;","\tfloat n = (coordinates.x < u_resolution * 0.5) ? coordinates.x : coordinates.x - u_resolution;","\tfloat m = (coordinates.y < u_resolution * 0.5) ? coordinates.y : coordinates.y - u_resolution;","\tvec2 K = (2.0 * PI * vec2(n, m)) / u_size;","\tfloat k = length(K);","\tfloat l_wind = length(u_wind);","\tfloat Omega = 0.84;","\tfloat kp = G * pow2(Omega / l_wind);","\tfloat c = omega(k) / k;","\tfloat cp = omega(kp) / kp;","\tfloat Lpm = exp(-1.25 * pow2(kp / k));","\tfloat gamma = 1.7;","\tfloat sigma = 0.08 * (1.0 + 4.0 * pow(Omega, -3.0));","\tfloat Gamma = exp(-pow2(sqrt(k / kp) - 1.0) / 2.0 * pow2(sigma));","\tfloat Jp = pow(gamma, Gamma);","\tfloat Fp = Lpm * Jp * exp(-Omega / sqrt(10.0) * (sqrt(k / kp) - 1.0));","\tfloat alphap = 0.006 * sqrt(Omega);","\tfloat Bl = 0.5 * alphap * cp / c * Fp;","\tfloat z0 = 0.000037 * pow2(l_wind) / G * pow(l_wind / cp, 0.9);","\tfloat uStar = 0.41 * l_wind / log(10.0 / z0);","\tfloat alpham = 0.01 * ((uStar < CM) ? (1.0 + log(uStar / CM)) : (1.0 + 3.0 * log(uStar / CM)));","\tfloat Fm = exp(-0.25 * pow2(k / KM - 1.0));","\tfloat Bh = 0.5 * alpham * CM / c * Fm * Lpm;","\tfloat a0 = log(2.0) / 4.0;","\tfloat am = 0.13 * uStar / CM;","\tfloat Delta = tanh(a0 + 4.0 * pow(c / cp, 2.5) + am * pow(CM / c, 2.5));","\tfloat cosPhi = dot(normalize(u_wind), normalize(K));","\tfloat S = (1.0 / (2.0 * PI)) * pow(k, -4.0) * (Bl + Bh) * (1.0 + Delta * (2.0 * cosPhi * cosPhi - 1.0));","\tfloat dk = 2.0 * PI / u_size;","\tfloat h = sqrt(S / 2.0) * dk;","\tif (K.x == 0.0 && K.y == 0.0) {","\t\th = 0.0;","\t}","\tgl_FragColor = vec4(h, 0.0, 0.0, 0.0);","}"].join("\n")},m.ocean_phase={uniforms:{u_phases:{value:null},u_deltaTime:{value:null},u_resolution:{value:null},u_size:{value:null}},fragmentShader:["precision highp float;","#include <common>","const float G = 9.81;","const float KM = 370.0;","varying vec2 vUV;","uniform sampler2D u_phases;","uniform float u_deltaTime;","uniform float u_resolution;","uniform float u_size;","float omega (float k) {","\treturn sqrt(G * k * (1.0 + k * k / KM * KM));","}","void main (void) {","\tfloat deltaTime = 1.0 / 60.0;","\tvec2 coordinates = gl_FragCoord.xy - 0.5;","\tfloat n = (coordinates.x < u_resolution * 0.5) ? coordinates.x : coordinates.x - u_resolution;","\tfloat m = (coordinates.y < u_resolution * 0.5) ? coordinates.y : coordinates.y - u_resolution;","\tvec2 waveVector = (2.0 * PI * vec2(n, m)) / u_size;","\tfloat phase = texture2D(u_phases, vUV).r;","\tfloat deltaPhase = omega(length(waveVector)) * u_deltaTime;","\tphase = mod(phase + deltaPhase, 2.0 * PI);","\tgl_FragColor = vec4(phase, 0.0, 0.0, 0.0);","}"].join("\n")},m.ocean_spectrum={uniforms:{u_size:{value:null},u_resolution:{value:null},u_choppiness:{value:null},u_phases:{value:null},u_initialSpectrum:{value:null}},fragmentShader:["precision highp float;","#include <common>","const float G = 9.81;","const float KM = 370.0;","varying vec2 vUV;","uniform float u_size;","uniform float u_resolution;","uniform float u_choppiness;","uniform sampler2D u_phases;","uniform sampler2D u_initialSpectrum;","vec2 multiplyComplex (vec2 a, vec2 b) {","\treturn vec2(a[0] * b[0] - a[1] * b[1], a[1] * b[0] + a[0] * b[1]);","}","vec2 multiplyByI (vec2 z) {","\treturn vec2(-z[1], z[0]);","}","float omega (float k) {","\treturn sqrt(G * k * (1.0 + k * k / KM * KM));","}","void main (void) {","\tvec2 coordinates = gl_FragCoord.xy - 0.5;","\tfloat n = (coordinates.x < u_resolution * 0.5) ? coordinates.x : coordinates.x - u_resolution;","\tfloat m = (coordinates.y < u_resolution * 0.5) ? coordinates.y : coordinates.y - u_resolution;","\tvec2 waveVector = (2.0 * PI * vec2(n, m)) / u_size;","\tfloat phase = texture2D(u_phases, vUV).r;","\tvec2 phaseVector = vec2(cos(phase), sin(phase));","\tvec2 h0 = texture2D(u_initialSpectrum, vUV).rg;","\tvec2 h0Star = texture2D(u_initialSpectrum, vec2(1.0 - vUV + 1.0 / u_resolution)).rg;","\th0Star.y *= -1.0;","\tvec2 h = multiplyComplex(h0, phaseVector) + multiplyComplex(h0Star, vec2(phaseVector.x, -phaseVector.y));","\tvec2 hX = -multiplyByI(h * (waveVector.x / length(waveVector))) * u_choppiness;","\tvec2 hZ = -multiplyByI(h * (waveVector.y / length(waveVector))) * u_choppiness;","\tif (waveVector.x == 0.0 && waveVector.y == 0.0) {","\t\th = vec2(0.0);","\t\thX = vec2(0.0);","\t\thZ = vec2(0.0);","\t}","\tgl_FragColor = vec4(hX + multiplyByI(h), hZ);","}"].join("\n")},m.ocean_normals={uniforms:{u_displacementMap:{value:null},u_resolution:{value:null},u_size:{value:null}},fragmentShader:["precision highp float;","varying vec2 vUV;","uniform sampler2D u_displacementMap;","uniform float u_resolution;","uniform float u_size;","void main (void) {","\tfloat texel = 1.0 / u_resolution;","\tfloat texelSize = u_size / u_resolution;","\tvec3 center = texture2D(u_displacementMap, vUV).rgb;","\tvec3 right = vec3(texelSize, 0.0, 0.0) + texture2D(u_displacementMap, vUV + vec2(texel, 0.0)).rgb - center;","\tvec3 left = vec3(-texelSize, 0.0, 0.0) + texture2D(u_displacementMap, vUV + vec2(-texel, 0.0)).rgb - center;","\tvec3 top = vec3(0.0, 0.0, -texelSize) + texture2D(u_displacementMap, vUV + vec2(0.0, -texel)).rgb - center;","\tvec3 bottom = vec3(0.0, 0.0, texelSize) + texture2D(u_displacementMap, vUV + vec2(0.0, texel)).rgb - center;","\tvec3 topRight = cross(right, top);","\tvec3 topLeft = cross(top, left);","\tvec3 bottomLeft = cross(left, bottom);","\tvec3 bottomRight = cross(bottom, right);","\tgl_FragColor = vec4(normalize(topRight + topLeft + bottomLeft + bottomRight), 1.0);","}"].join("\n")},m.ocean_main={uniforms:{u_displacementMap:{value:null},u_normalMap:{value:null},u_geometrySize:{value:null},u_size:{value:null},u_projectionMatrix:{value:null},u_viewMatrix:{value:null},u_cameraPosition:{value:null},u_skyColor:{value:null},u_oceanColor:{value:null},u_sunDirection:{value:null},u_exposure:{value:null}},vertexShader:["precision highp float;","varying vec3 vPos;","varying vec2 vUV;","uniform mat4 u_projectionMatrix;","uniform mat4 u_viewMatrix;","uniform float u_size;","uniform float u_geometrySize;","uniform sampler2D u_displacementMap;","void main (void) {","\tvec3 newPos = position + texture2D(u_displacementMap, uv).rgb * (u_geometrySize / u_size);","\tvPos = newPos;","\tvUV = uv;","\tgl_Position = u_projectionMatrix * u_viewMatrix * vec4(newPos, 1.0);","}"].join("\n"),fragmentShader:["precision highp float;","varying vec3 vPos;","varying vec2 vUV;","uniform sampler2D u_displacementMap;","uniform sampler2D u_normalMap;","uniform vec3 u_cameraPosition;","uniform vec3 u_oceanColor;","uniform vec3 u_skyColor;","uniform vec3 u_sunDirection;","uniform float u_exposure;","vec3 hdr (vec3 color, float exposure) {","\treturn 1.0 - exp(-color * exposure);","}","void main (void) {","\tvec3 normal = texture2D(u_normalMap, vUV).rgb;","\tvec3 view = normalize(u_cameraPosition - vPos);","\tfloat fresnel = 0.02 + 0.98 * pow(1.0 - dot(normal, view), 5.0);","\tvec3 sky = fresnel * u_skyColor;","\tfloat diffuse = clamp(dot(normal, normalize(u_sunDirection)), 0.0, 1.0);","\tvec3 water = (1.0 - fresnel) * u_oceanColor * u_skyColor * diffuse;","\tvec3 color = sky + water;","\tgl_FragColor = vec4(hdr(color, u_exposure), 1.0);","}"].join("\n")};var d=function(e,t,r,o){function l(e,t){return void 0!==e?e:t}this.changed=!0,this.initial=!0,this.oceanCamera=new n.OrthographicCamera,this.oceanCamera.position.z=1,this.renderer=e,this.renderer.clearColor(16777215),this.scene=new n.Scene,o=o||{},this.clearColor=l(o.CLEAR_COLOR,[1,1,1,0]),this.geometryOrigin=l(o.GEOMETRY_ORIGIN,[-1e3,-1e3]),this.sunDirectionX=l(o.SUN_DIRECTION[0],-1),this.sunDirectionY=l(o.SUN_DIRECTION[1],1),this.sunDirectionZ=l(o.SUN_DIRECTION[2],1),this.oceanColor=l(o.OCEAN_COLOR,new n.Vector3(.004,.016,.047)),this.skyColor=l(o.SKY_COLOR,new n.Vector3(3.2,9.6,12.8)),this.exposure=l(o.EXPOSURE,.35),this.geometryResolution=l(o.GEOMETRY_RESOLUTION,32),this.geometrySize=l(o.GEOMETRY_SIZE,2e3),this.resolution=l(o.RESOLUTION,64),this.floatSize=l(o.SIZE_OF_FLOAT,4),this.windX=l(o.INITIAL_WIND[0],10),this.windY=l(o.INITIAL_WIND[1],10),this.size=l(o.INITIAL_SIZE,250),this.choppiness=l(o.INITIAL_CHOPPINESS,1.5),this.matrixNeedsUpdate=!1;var d=l(o.USE_HALF_FLOAT,!1)?n.HalfFloatType:n.FloatType,c={minFilter:n.LinearFilter,magFilter:n.LinearFilter,wrapS:n.ClampToEdgeWrapping,wrapT:n.ClampToEdgeWrapping,format:n.RGBAFormat,stencilBuffer:!1,depthBuffer:!1,premultiplyAlpha:!1,type:d},h={minFilter:n.NearestFilter,magFilter:n.NearestFilter,wrapS:n.ClampToEdgeWrapping,wrapT:n.ClampToEdgeWrapping,format:n.RGBAFormat,stencilBuffer:!1,depthBuffer:!1,premultiplyAlpha:!1,type:d},f={minFilter:n.NearestFilter,magFilter:n.NearestFilter,wrapS:n.RepeatWrapping,wrapT:n.RepeatWrapping,format:n.RGBAFormat,stencilBuffer:!1,depthBuffer:!1,premultiplyAlpha:!1,type:d};this.initialSpectrumFramebuffer=new n.WebGLRenderTarget(this.resolution,this.resolution,f),this.spectrumFramebuffer=new n.WebGLRenderTarget(this.resolution,this.resolution,h),this.pingPhaseFramebuffer=new n.WebGLRenderTarget(this.resolution,this.resolution,h),this.pongPhaseFramebuffer=new n.WebGLRenderTarget(this.resolution,this.resolution,h),this.pingTransformFramebuffer=new n.WebGLRenderTarget(this.resolution,this.resolution,h),this.pongTransformFramebuffer=new n.WebGLRenderTarget(this.resolution,this.resolution,h),this.displacementMapFramebuffer=new n.WebGLRenderTarget(this.resolution,this.resolution,c),this.normalMapFramebuffer=new n.WebGLRenderTarget(this.resolution,this.resolution,c);var v=m.ocean_sim_vertex,_=m.ocean_subtransform,S=n.UniformsUtils.clone(_.uniforms);this.materialOceanHorizontal=new n.ShaderMaterial({uniforms:S,vertexShader:v.vertexShader,fragmentShader:"#define HORIZONTAL \n"+_.fragmentShader}),this.materialOceanHorizontal.uniforms.u_transformSize={value:this.resolution},this.materialOceanHorizontal.uniforms.u_subtransformSize={value:null},this.materialOceanHorizontal.uniforms.u_input={value:null},this.materialOceanHorizontal.depthTest=!1;var x=m.ocean_subtransform,w=n.UniformsUtils.clone(x.uniforms);this.materialOceanVertical=new n.ShaderMaterial({uniforms:w,vertexShader:v.vertexShader,fragmentShader:x.fragmentShader}),this.materialOceanVertical.uniforms.u_transformSize={value:this.resolution},this.materialOceanVertical.uniforms.u_subtransformSize={value:null},this.materialOceanVertical.uniforms.u_input={value:null},this.materialOceanVertical.depthTest=!1;var M=m.ocean_initial_spectrum,O=n.UniformsUtils.clone(M.uniforms);this.materialInitialSpectrum=new n.ShaderMaterial({uniforms:O,vertexShader:M.vertexShader,fragmentShader:M.fragmentShader}),this.materialInitialSpectrum.uniforms.u_wind={value:new n.Vector2},this.materialInitialSpectrum.uniforms.u_resolution={value:this.resolution},this.materialInitialSpectrum.depthTest=!1;var y=m.ocean_phase,T=n.UniformsUtils.clone(y.uniforms);this.materialPhase=new n.ShaderMaterial({uniforms:T,vertexShader:v.vertexShader,fragmentShader:y.fragmentShader}),this.materialPhase.uniforms.u_resolution={value:this.resolution},this.materialPhase.depthTest=!1;var z=m.ocean_spectrum,P=n.UniformsUtils.clone(z.uniforms);this.materialSpectrum=new n.ShaderMaterial({uniforms:P,vertexShader:v.vertexShader,fragmentShader:z.fragmentShader}),this.materialSpectrum.uniforms.u_initialSpectrum={value:null},this.materialSpectrum.uniforms.u_resolution={value:this.resolution},this.materialSpectrum.depthTest=!1;var F=m.ocean_normals,C=n.UniformsUtils.clone(F.uniforms);this.materialNormal=new n.ShaderMaterial({uniforms:C,vertexShader:v.vertexShader,fragmentShader:F.fragmentShader}),this.materialNormal.uniforms.u_displacementMap={value:null},this.materialNormal.uniforms.u_resolution={value:this.resolution},this.materialNormal.depthTest=!1;var I=m.ocean_main,L=n.UniformsUtils.clone(I.uniforms);this.materialOcean=new n.ShaderMaterial({uniforms:L,vertexShader:I.vertexShader,fragmentShader:I.fragmentShader}),this.materialOcean.uniforms.u_geometrySize={value:this.resolution},this.materialOcean.uniforms.u_displacementMap={value:this.displacementMapFramebuffer.texture},this.materialOcean.uniforms.u_normalMap={value:this.normalMapFramebuffer.texture},this.materialOcean.uniforms.u_oceanColor={value:this.oceanColor},this.materialOcean.uniforms.u_skyColor={value:this.skyColor},this.materialOcean.uniforms.u_sunDirection={value:new n.Vector3(this.sunDirectionX,this.sunDirectionY,this.sunDirectionZ)},this.materialOcean.uniforms.u_exposure={value:this.exposure},this.materialOceanHorizontal.blending=0,this.materialOceanVertical.blending=0,this.materialInitialSpectrum.blending=0,this.materialPhase.blending=0,this.materialSpectrum.blending=0,this.materialNormal.blending=0,this.materialOcean.blending=0,this.screenQuad=new n.Mesh(new n.PlaneBufferGeometry(2,2)),this.scene.add(this.screenQuad),this.generateSeedPhaseTexture(),this.generateMesh()};d.prototype.generateMesh=function(){var e=new n.PlaneBufferGeometry(this.geometrySize,this.geometrySize,this.geometryResolution,this.geometryResolution);e.rotateX(-Math.PI/2),this.oceanMesh=new n.Mesh(e,this.materialOcean)},d.prototype.render=function(){var e=this.renderer.getRenderTarget();this.scene.overrideMaterial=null,this.changed&&this.renderInitialSpectrum(),this.renderWavePhase(),this.renderSpectrum(),this.renderSpectrumFFT(),this.renderNormalMap(),this.scene.overrideMaterial=null,this.renderer.setRenderTarget(e)},d.prototype.generateSeedPhaseTexture=function(){this.pingPhase=!0;for(var e=new window.Float32Array(this.resolution*this.resolution*4),i=0;i<this.resolution;i++)for(var t=0;t<this.resolution;t++)e[i*this.resolution*4+4*t]=2*Math.random()*Math.PI,e[i*this.resolution*4+4*t+1]=0,e[i*this.resolution*4+4*t+2]=0,e[i*this.resolution*4+4*t+3]=0;this.pingPhaseTexture=new n.DataTexture(e,this.resolution,this.resolution,n.RGBAFormat),this.pingPhaseTexture.wrapS=n.ClampToEdgeWrapping,this.pingPhaseTexture.wrapT=n.ClampToEdgeWrapping,this.pingPhaseTexture.type=n.FloatType},d.prototype.renderInitialSpectrum=function(){this.scene.overrideMaterial=this.materialInitialSpectrum,this.materialInitialSpectrum.uniforms.u_wind.value.set(this.windX,this.windY),this.materialInitialSpectrum.uniforms.u_size.value=this.size,this.renderer.setRenderTarget(this.initialSpectrumFramebuffer),this.renderer.clear(),this.renderer.render(this.scene,this.oceanCamera)},d.prototype.renderWavePhase=function(){this.scene.overrideMaterial=this.materialPhase,this.screenQuad.material=this.materialPhase,this.initial?(this.materialPhase.uniforms.u_phases.value=this.pingPhaseTexture,this.initial=!1):this.materialPhase.uniforms.u_phases.value=this.pingPhase?this.pingPhaseFramebuffer.texture:this.pongPhaseFramebuffer.texture,this.materialPhase.uniforms.u_deltaTime.value=this.deltaTime,this.materialPhase.uniforms.u_size.value=this.size,this.renderer.setRenderTarget(this.pingPhase?this.pongPhaseFramebuffer:this.pingPhaseFramebuffer),this.renderer.render(this.scene,this.oceanCamera),this.pingPhase=!this.pingPhase},d.prototype.renderSpectrum=function(){this.scene.overrideMaterial=this.materialSpectrum,this.materialSpectrum.uniforms.u_initialSpectrum.value=this.initialSpectrumFramebuffer.texture,this.materialSpectrum.uniforms.u_phases.value=this.pingPhase?this.pingPhaseFramebuffer.texture:this.pongPhaseFramebuffer.texture,this.materialSpectrum.uniforms.u_choppiness.value=this.choppiness,this.materialSpectrum.uniforms.u_size.value=this.size,this.renderer.setRenderTarget(this.spectrumFramebuffer),this.renderer.render(this.scene,this.oceanCamera)},d.prototype.renderSpectrumFFT=function(){var e=Math.log(this.resolution)/Math.log(2);this.scene.overrideMaterial=this.materialOceanHorizontal;for(var i=0;i<e;i++)0===i?(this.materialOceanHorizontal.uniforms.u_input.value=this.spectrumFramebuffer.texture,this.materialOceanHorizontal.uniforms.u_subtransformSize.value=Math.pow(2,i%e+1),this.renderer.setRenderTarget(this.pingTransformFramebuffer),this.renderer.render(this.scene,this.oceanCamera)):i%2==1?(this.materialOceanHorizontal.uniforms.u_input.value=this.pingTransformFramebuffer.texture,this.materialOceanHorizontal.uniforms.u_subtransformSize.value=Math.pow(2,i%e+1),this.renderer.setRenderTarget(this.pongTransformFramebuffer),this.renderer.render(this.scene,this.oceanCamera)):(this.materialOceanHorizontal.uniforms.u_input.value=this.pongTransformFramebuffer.texture,this.materialOceanHorizontal.uniforms.u_subtransformSize.value=Math.pow(2,i%e+1),this.renderer.setRenderTarget(this.pingTransformFramebuffer),this.renderer.render(this.scene,this.oceanCamera));this.scene.overrideMaterial=this.materialOceanVertical;for(i=e;i<2*e;i++)i===2*e-1?(this.materialOceanVertical.uniforms.u_input.value=e%2==0?this.pingTransformFramebuffer.texture:this.pongTransformFramebuffer.texture,this.materialOceanVertical.uniforms.u_subtransformSize.value=Math.pow(2,i%e+1),this.renderer.setRenderTarget(this.displacementMapFramebuffer),this.renderer.render(this.scene,this.oceanCamera)):i%2==1?(this.materialOceanVertical.uniforms.u_input.value=this.pingTransformFramebuffer.texture,this.materialOceanVertical.uniforms.u_subtransformSize.value=Math.pow(2,i%e+1),this.renderer.setRenderTarget(this.pongTransformFramebuffer),this.renderer.render(this.scene,this.oceanCamera)):(this.materialOceanVertical.uniforms.u_input.value=this.pongTransformFramebuffer.texture,this.materialOceanVertical.uniforms.u_subtransformSize.value=Math.pow(2,i%e+1),this.renderer.setRenderTarget(this.pingTransformFramebuffer),this.renderer.render(this.scene,this.oceanCamera))},d.prototype.renderNormalMap=function(){this.scene.overrideMaterial=this.materialNormal,this.changed&&(this.materialNormal.uniforms.u_size.value=this.size),this.materialNormal.uniforms.u_displacementMap.value=this.displacementMapFramebuffer.texture,this.renderer.setRenderTarget(this.normalMapFramebuffer),this.renderer.clear(),this.renderer.render(this.scene,this.oceanCamera)};var c=r(216),h={props:{diveSites:{type:Array,default:function(){return[]}}},data:function(){return{renderer:null}},mounted:function(){var e,t,r=this,m=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,h=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight,f=new n.Raycaster,v=new n.Vector2,_=new n.Group;var S=document.getElementById("ilha-container"),x=new n.PerspectiveCamera(75,m/h,1,2e4);x.position.set(0,1e3,100),x.lookAt(0,0,0);var w=new n.Scene;w.background=new n.Color(4635884),this.renderer=new n.WebGLRenderer,this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.setSize(m,h);var M=new l.a(x,S);M.rotateSpeed=2,M.zoomSpeed=1.2,M.panSpeed=.8,M.noPan=!1,M.staticMoving=!1,M.dynamicDampingFactor=.3,M.keys=[65,83,68];var O=new n.AmbientLight(13421772,.4);w.add(O);var y=new n.DirectionalLight(16777215,.8);y.position.set(1,1,0).normalize(),w.add(y);var T,z,P=new n.LoadingManager((function(){w.add(e)})),F=new n.MeshLambertMaterial({color:16711680,side:2,shading:n.FlatShading}),C=!0,I=!1,L=void 0;try{for(var R,E=this.diveSites[Symbol.iterator]();!(C=(R=E.next()).done);C=!0){var D=R.value,V=new n.TorusGeometry(20,10,16,100),N=new n.Mesh(V,F),U=(T=D.lat,z=D.long,[7e3*(-24.26333333-T)/.09000000000000341-4500,7e3*(-46.15-z)/(-46.15- -46.2)-4500]);N.position.set(U[0],20,U[1]),N.userData=D;var A=new c.SpriteText2D(D.name,{align:c.textAlign.center,font:"40px Arial",fillStyle:"#000000",antialias:!0});A.position.set(U[0],50,U[1]),A.sprite.userData=A.userData=D,_.add(N,A)}}catch(e){I=!0,L=e}finally{try{C||null==E.return||E.return()}finally{if(I)throw L}}w.add(_),new o.a(P).load("./PEMLSdae/PEMLS_skt.dae",(function(t){(e=t.scene).position.set(220,0,-100);e.rotateZ(80/180*Math.PI)}));var k=new d(this.renderer,x,w,{USE_HALF_FLOAT:!1,INITIAL_SIZE:2048,INITIAL_WIND:[4,4],INITIAL_CHOPPINESS:.3,CLEAR_COLOR:[1,1,1,0],GEOMETRY_ORIGIN:[-1024,-1024],SUN_DIRECTION:[-1,1,1],OCEAN_COLOR:new n.Vector3(.004,.016,.047),SKY_COLOR:new n.Vector3(3.2,9.6,12.8),EXPOSURE:.35,GEOMETRY_RESOLUTION:512,GEOMETRY_SIZE:2048,RESOLUTION:1024});k.materialOcean.uniforms.u_projectionMatrix={value:x.projectionMatrix},k.materialOcean.uniforms.u_viewMatrix={value:x.matrixWorldInverse},k.materialOcean.uniforms.u_cameraPosition={value:x.position},k.oceanMesh.scale.set(2,2,2),w.add(k.oceanMesh);var j=function(){r.renderer.render(w,x)};!function animate(){if(r&&r.renderer){requestAnimationFrame(animate);var e=(new Date).getTime();k.deltaTime=(e-t)/1e3||0,t=e,k.render(.02*k.deltaTime),k.overrideMaterial=k.materialOcean,k.changed&&(k.materialOcean.uniforms.u_size.value=k.size,k.materialOcean.uniforms.u_sunDirection.value.set(k.sunDirectionX,k.sunDirectionY,k.sunDirectionZ),k.materialOcean.uniforms.u_exposure.value=k.exposure,k.changed=!1),k.materialOcean.uniforms.u_normalMap.value=k.normalMapFramebuffer.texture,k.materialOcean.uniforms.u_displacementMap.value=k.displacementMapFramebuffer.texture,k.materialOcean.uniforms.u_projectionMatrix.value=x.projectionMatrix,k.materialOcean.uniforms.u_viewMatrix.value=x.matrixWorldInverse,k.materialOcean.uniforms.u_cameraPosition.value=x.position,k.materialOcean.depthTest=!0,M.update(),j()}}(),window.addEventListener("resize",(function(){x.aspect=window.innerWidth/window.innerHeight,x.updateProjectionMatrix(),M.handleResize(),r.renderer.setSize(window.innerWidth,window.innerHeight)}),!1),this.renderer.domElement.addEventListener("mousedown",(function(e){v.x=event.clientX/r.renderer.domElement.clientWidth*2-1,v.y=-event.clientY/r.renderer.domElement.clientHeight*2+1,f.setFromCamera(v,x);var t=f.intersectObject(_,!0);if(t.length>0){var object=t[0].object;alert(object.userData.name)}})),M.addEventListener("change",j),S.appendChild(this.renderer.domElement)},beforeDestroy:function(){this.renderer.forceContextLoss(),this.renderer.domElement=null,this.renderer=null}},f=(r(220),r(4)),v={components:{Ilha3D:Object(f.a)(h,(function(){var e=this.$createElement;return(this._self._c||e)("div",{attrs:{id:"ilha-container"}})}),[],!1,null,"b85cddc6",null).exports},data:function(){return{diveSites:[{name:"Portinho",lat:-24.318083,long:-46.183444,dificuldade:"Baixo grau de dificuldade.",description:"A face norte é o local onde ocorre a maioria dos mergulhos, com profundidade de até 22m, mais abrigado das correntes e de fácil orientação."},{name:"Naufrágio Moreia",lat:-24.317056,long:-46.182083,dificuldade:"Baixo grau de dificuldade.",description:"Na face norte, próximo à ponta leste, pesqueiro de ferro com 15m de comprimento, estrutura em estado instável, desaconselhando penetração, profundidade máxima de 22m."},{name:"Piscinas",lat:-24.321667,long:-46.184306,dificuldade:"Médio grau de dificuldade.",description:"Na ponta oeste/sudoeste da Laje, ambiente com profundidade que varia de 10 a 35m e requer boa noção de orientação subaquática."},{name:"Boca da Baleia",lat:-24.316778,long:-46.179083,dificuldade:"Fenda voltada para leste, com cerca de 50m de extensão e profundidade média de 15m. Requer excelente condição de mar e direção de ondulação adequada para que se possa adentrar.",description:"Alto grau de dificuldade"},{name:"Paredão Face Sul",lat:-24.320333,long:-46.180194,dificuldade:"Médio grau de dificuldade.",description:'Encosta rochosa íngreme que desce verticalmente até 42m de profundidade. Mergulhos feitos em "drifting" a favor da corrente. Formação com inclinação negativa entre 12 e 27m de profundidade do centro para leste.'},{name:"Parcel das Âncoras",lat:-24.321833,long:-46.184972,dificuldade:"Alto grau de dificuldade.",description:"Fundo rochoso que se destaca da Laje em direção ao continente, apresenta estrutura complexa, exigindo boa orientação subaquática. Profundidade entre 18 e 42m. Presença de muitas âncoras de pesqueiros que ficaram presas ao fundo rochoso. Sujeito a correntes."},{name:"Parcel do Sul",lat:-24.326917,long:-46.183722,dificuldade:"Médio grau de dificuldade.",description:"Formação submersa a cerca de 400m a sudoeste da Laje, inicia aos 8m e segue até os 42m. Requer mar em boas condições, mas a formação permite orientação e deslocamento mais simples."},{name:"Calhaus Face Norte",lat:-24.327167,long:-46.161667,dificuldade:"Baixo a médio grau de dificuldade.",description:"Paredão levemente acidentado, com características de navegação subaquática semelhantes ao portinho da Laje, com profundidades que podem variar de 8 a 25m, passando a até 35m se houver afastamento das rochas na direção norte (sentido Laje)."},{name:"Calhaus Face Sul",lat:-24.32825,long:-46.159278,dificuldade:"Paredão levemente acidentado com incidência de correntes e profundidades que podem variar de 8 a 40m.",description:"Alto grau de dificuldade."},{name:"Calhaus Túnel",lat:-24.328,long:-46.160722,dificuldade:"Paredão levemente acidentado com incidência de correntes e profundidades que podem variar de 8 a 40m.",description:"Alto grau de dificuldade."},{name:"Parcel Novo",lat:-24.345472,long:-46.173972,dificuldade:"Alto grau de dificuldade.",description:"Formação submersa localizada cerca de 1,5 milhas náuticas ao sul da Laje que inicia aos 26m de profundidade e chega aos 45m. Exige mar em excelentes condições e preparo adequado dos mergulhadores."},{name:"Parcel do Brilhante",lat:-24.28888889,long:-46.16388889,dificuldade:"",description:""},{name:"Laje do Bandolim",lat:-24.27666667,long:-46.18194444,dificuldade:"",description:""}]}}},_=Object(f.a)(v,(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("article",[r("section",{staticClass:"section"},[r("h1",{staticClass:"title"},[r("i18n",[e._v("\n        Mergulho na Laje de Santos\n      ")])],1),e._v(" "),r("h2",{staticClass:"subtitle"},[r("i18n",[e._v("\n        Laje de Santos em Realidade Virtual\n      ")])],1),e._v(" "),r("p",[r("i18n",[e._v("\n        A Laje de Santos é um local popular para a prática do mergulho. Próxima da cidade de São Paulo, a 1h30m de barco da costa e\n        com uma diversidade de espécies que poucos lugares são capazes de igualar, raramente com menos de 10 metros de visibilidade.\n      ")])],1)]),e._v(" "),r("section",[r("Ilha3D",{attrs:{"dive-sites":e.diveSites}})],1),e._v(" "),r("section",{staticClass:"section"},[r("h2",{staticClass:"subtitle"},[r("i18n",[e._v("\n        Pontos de mergulho\n      ")])],1),e._v(" "),e._l(e.diveSites,(function(t){return r("div",{key:t.name},[r("h3",{staticClass:"subtitle is-3"},[e._v("\n        "+e._s(t.name)+"\n      ")]),e._v(" "),r("span",{staticClass:"dive-dificuldade"},[e._v(e._s(t.dificuldade))]),e._v(" "),r("span",{staticClass:"dive-coordinates"},[e._v("Latitude: "+e._s(t.lat)+" Longitude: "+e._s(t.long))]),e._v(" "),r("span",{staticClass:"dive-description"},[e._v(e._s(t.description))])])}))],2),e._v(" "),e._m(0)])}),[function(){var e=this.$createElement,t=this._self._c||e;return t("section",[t("p",[this._v("\n      Fontes das informações:\n      "),t("a",{attrs:{href:"https://www.lajeviva.org.br/Lajeviva/parque/pontos-de-mergulho/"}},[this._v("Instituto Laje Viva")]),this._v(",\n      "),t("a",{attrs:{href:"http://arquivos.ambiente.sp.gov.br/fundacaoflorestal/2014/04/Plano-Emergencial-de-Uso-P%C3%BAblico_PEMLS_versaoFinal.pdf"}},[this._v("Plano Emergencial de Uso Público do PEMLS")]),this._v(" "),t("a",{attrs:{href:"https://smastr16.blob.core.windows.net/consema/2018/11/e-laje-de-santos-plano-de-manejo.pdf"}},[this._v("Plano de Manejo da Laje de Santos")])])])}],!1,null,null,null);t.default=_.exports}}]);